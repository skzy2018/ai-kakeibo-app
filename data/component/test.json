{
  "name": "test",
  "environment_variables": [],
  "description": "Description",
  "sql": "-- 月別支出合計 (棒グラフ)\nSELECT \n  strftime('%Y-%m', transaction_date) as month,\n  SUM(CASE WHEN amount < 0 THEN ABS(amount) ELSE 0 END) as total_expense\nFROM transactions\nWHERE transaction_date >= $startDate AND transaction_date <= $endDate\nGROUP BY month\nORDER BY month\nLIMIT 12;",
  "d3code": "// D3.js visualization code\n// This example creates a bar chart with the SQL query results\n(function(data) {\n  // Clear any previous svg\n  d3.select(\"#visualization\").html(\"\");\n  \n  // Set the dimensions and margins of the graph\n  const margin = {top: 30, right: 30, bottom: 70, left: 60},\n      width = 600 - margin.left - margin.right,\n      height = 400 - margin.top - margin.bottom;\n  \n  // Append the svg object to the body of the page\n  const svg = d3.select(\"#visualization\")\n    .append(\"svg\")\n      .attr(\"width\", width + margin.left + margin.right)\n      .attr(\"height\", height + margin.top + margin.bottom)\n    .append(\"g\")\n      .attr(\"transform\", `translate(${margin.left},${margin.top})`);\n  \n  // X axis\n  const x = d3.scaleBand()\n    .range([0, width])\n    .domain(data.map(d => d.month))\n    .padding(0.2);\n  svg.append(\"g\")\n    .attr(\"transform\", `translate(0,${height})`)\n    .call(d3.axisBottom(x))\n    .selectAll(\"text\")\n      .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\n      .style(\"text-anchor\", \"end\");\n  \n  // Add Y axis\n  const y = d3.scaleLinear()\n    .domain([0, d3.max(data, d => +d.total_expense)])\n    .range([height, 0]);\n  svg.append(\"g\")\n    .call(d3.axisLeft(y));\n  \n  // Bars\n  svg.selectAll(\"mybar\")\n    .data(data)\n    .enter()\n    .append(\"rect\")\n      .attr(\"x\", d => x(d.month))\n      .attr(\"y\", d => y(d.total_expense))\n      .attr(\"width\", x.bandwidth())\n      .attr(\"height\", d => height - y(d.total_expense))\n      .attr(\"fill\", \"#69b3a2\");\n})(data);"
}